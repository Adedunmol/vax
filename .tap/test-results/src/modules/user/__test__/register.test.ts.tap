Initializing Redis Client...
TAP version 14
# Subtest: registration
connected to redis
    # Subtest: ✅ Should register a user successfully
        1..0
    ok 1 - ✅ Should register a user successfully # time=508.349ms
    
    not ok 2 - should be equal
      ---
      compare: ===
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 90
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 108
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:90:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:38:58)
      source: "    await t.test(\"❌ Should return error for weak password\", async ()
        => {\r
      
        \      const response = await fastify.inject({\r
      
        \        method: \"POST\",\r
      
        ----------^
      
        \        url,\r
      
        \        payload: {\n"
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -201
        +400
      ...
    
    not ok 3 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,3 +1,6 @@
         Object {
        -  "message": "User registered successfully",
        +  "statusCode": 400,
        +  "code": "FST_ERR_VALIDATION",
        +  "error": "Bad Request",
        +  "message": "body must have required property 'username'",
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 91
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 109
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:91:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:38:58)
      source: "      const response = await fastify.inject({\r
      
        \        method: \"POST\",\r
      
        \        url,\r
      
        ----------^
      
        \        payload: {\r
      
        \          email,\n"
      ...
    
    # Subtest: ❌ Should return error when required fields are missing
        1..0
    ok 4 - ❌ Should return error when required fields are missing # time=6.796ms
    
    ok 5 - should be equal
    not ok 6 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,2 +1,6 @@
         Object {
        +  "statusCode": 400,
        +  "code": "FST_ERR_VALIDATION",
        +  "error": "Bad Request",
        +  "message": "body must have required property 'username'",
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 105
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 123
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:105:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:38:58)
      source: "    });\r
      
        \r
      
        \    await t.test(\"❌ Should return error when registering with an existing
        email\", async () => {\r
      
        ----------^
      
        \      // First registration\r
      
        \      await fastify.inject({\n"
      ...
    
    # Subtest: ❌ Should return error for invalid email format
        1..0
    ok 7 - ❌ Should return error for invalid email format # time=6.092ms
    
    ok 8 - should be equal
    not ok 9 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,2 +1,6 @@
         Object {
        +  "statusCode": 400,
        +  "code": "FST_ERR_VALIDATION",
        +  "error": "Bad Request",
        +  "message": "body must have required property 'username'",
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 120
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 138
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:120:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:38:58)
      source: "\r
      
        \      // Second registration with same email\r
      
        \      const response = await fastify.inject({\r
      
        ----------^
      
        \        method: \"POST\",\r
      
        \        url,\n"
      ...
    
    # Subtest: ❌ Should return error for weak password
        1..0
    ok 10 - ❌ Should return error for weak password # time=5.014ms
    
    ok 11 - should be equal
    not ok 12 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,2 +1,6 @@
         Object {
        +  "statusCode": 400,
        +  "code": "FST_ERR_VALIDATION",
        +  "error": "Bad Request",
        +  "message": "body must have required property 'username'",
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 135
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 153
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:135:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:38:58)
      source: "      t.same(response.json(), { error: \"Email already registered\"
        });\r
      
        \    });\r
      
        });\n"
      ...
    
    # Subtest: ❌ Should return error when registering with an existing email
        1..0
    ok 13 - ❌ Should return error when registering with an existing email # time=6.829ms
    
    ok 14 - should be equal
    not ok 15 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,3 +1,6 @@
         Object {
        -  "error": "Email already registered",
        +  "statusCode": 400,
        +  "code": "FST_ERR_VALIDATION",
        +  "error": "Bad Request",
        +  "message": "body must have required property 'username'",
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 163
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 181
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:163:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:38:58)
      ...
    
    1..15
not ok 1 - registration # time=668.49ms
  ---
  at:
    fileName: src\modules\user\__test__\register.test.ts
    lineNumber: 56
    columnNumber: 16
    typeName: Object
    generated:
      fileName: src/modules/user/__test__/register.test.ts
      lineNumber: 74
      columnNumber: 16
  source: "\r
  
    \    await t.test(\"❌ Should return error when required fields are missing\",
    async () => {\r
  
    \      const response = await fastify.inject({\r
  
    ---------------^
  
    \        method: \"POST\",\r
  
    \        url,\n"
  ...

not ok 2 - timeout!
  ---
  signal: null
  handles:
    - type: Socket
      events:
        - close
        - error
        - prefinish
        - finish
        - drain
        - data
        - end
        - readable
        - connect
        - timeout
    - type: Socket
      events:
        - close
        - error
        - prefinish
        - finish
        - drain
        - data
        - end
        - readable
        - connect
        - timeout
  expired: TAP
  test: TAP
  ...

1..2
