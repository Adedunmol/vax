TAP version 14
# Subtest: registration
    # Subtest: ✅ Should register a user successfully
        1..0
    ok 1 - ✅ Should register a user successfully # time=527.157ms
    
    not ok 2 - should be equal
      ---
      compare: ===
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 55
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 65
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:55:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "      const response = await fastify.inject({\r
      
        \        method: \"POST\",\r
      
        \        url,\r
      
        ----------^
      
        \        payload: {\r
      
        \          email,\n"
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -201
        +404
      ...
    
    not ok 3 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,3 +1,5 @@
         Object {
        -  "message": "User registered successfully",
        +  "message": "Route POST:/api/v1/register not found",
        +  "error": "Not Found",
        +  "statusCode": 404,
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 56
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 66
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:56:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "        method: \"POST\",\r
      
        \        url,\r
      
        \        payload: {\r
      
        ----------^
      
        \          email,\r
      
        \          password,\n"
      ...
    
    # Subtest: ❌ Should return error when required fields are missing
        1..0
    ok 4 - ❌ Should return error when required fields are missing # time=9.37ms
    
    not ok 5 - should be equal
      ---
      compare: ===
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 69
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 79
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:69:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "\r
      
        \    await t.test(\"❌ Should return error for invalid email format\", async ()
        => {\r
      
        \      const response = await fastify.inject({\r
      
        ----------^
      
        \        method: \"POST\",\r
      
        \        url,\n"
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -400
        +404
      ...
    
    not ok 6 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,2 +1,5 @@
         Object {
        +  "message": "Route POST:/api/v1/register not found",
        +  "error": "Not Found",
        +  "statusCode": 404,
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 70
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 80
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:70:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "    await t.test(\"❌ Should return error for invalid email format\",
        async () => {\r
      
        \      const response = await fastify.inject({\r
      
        \        method: \"POST\",\r
      
        ----------^
      
        \        url,\r
      
        \        payload: {\n"
      ...
    
    # Subtest: ❌ Should return error for invalid email format
        1..0
    ok 7 - ❌ Should return error for invalid email format # time=10.511ms
    
    not ok 8 - should be equal
      ---
      compare: ===
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 84
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 94
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:84:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "      t.same(response.json(), /Invalid request/);\r
      
        \    });\r
      
        \r
      
        \    await t.test(\"❌ Should return error for weak password\", async () => {\r
      
        \      const response = await fastify.inject({\n"
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -400
        +404
      ...
    
    not ok 9 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,2 +1,5 @@
         Object {
        +  "message": "Route POST:/api/v1/register not found",
        +  "error": "Not Found",
        +  "statusCode": 404,
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 85
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 95
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:85:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "    });\r
      
        \r
      
        \    await t.test(\"❌ Should return error for weak password\", async () => {\r
      
        ----------^
      
        \      const response = await fastify.inject({\r
      
        \        method: \"POST\",\n"
      ...
    
    # Subtest: ❌ Should return error for weak password
        1..0
    ok 10 - ❌ Should return error for weak password # time=17.43ms
    
    not ok 11 - should be equal
      ---
      compare: ===
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 99
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 109
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:99:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "\r
      
        \      t.equal(response.statusCode, 400);\r
      
        \      t.same(response.json(), /Invalid request/);\r
      
        ----------^
      
        \    });\n"
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -400
        +404
      ...
    
    not ok 12 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,2 +1,5 @@
         Object {
        +  "message": "Route POST:/api/v1/register not found",
        +  "error": "Not Found",
        +  "statusCode": 404,
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 100
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 110
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:100:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "      t.equal(response.statusCode, 400);\r
      
        \      t.same(response.json(), /Invalid request/);\r
      
        \    });\r
      
        \r
      
        \    await t.test(\"❌ Should return error when registering with an existing
        email\", async () => {\n"
      ...
    
    # Subtest: ❌ Should return error when registering with an existing email
        1..0
    ok 13 - ❌ Should return error when registering with an existing email # time=21.825ms
    
    not ok 14 - should be equal
      ---
      compare: ===
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 127
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 137
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:127:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "          lastName\r
      
        \        },\r
      
        \      });\r
      
        \r
      
        \      t.equal(response.statusCode, 400);\n"
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -400
        +404
      ...
    
    not ok 15 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,3 +1,5 @@
         Object {
        -  "error": "Email already registered",
        +  "message": "Route POST:/api/v1/register not found",
        +  "error": "Not Found",
        +  "statusCode": 404,
         }
      at:
        fileName: src\modules\user\__test__\register.test.ts
        lineNumber: 128
        columnNumber: 11
        isToplevel: true
        generated:
          fileName: src/modules/user/__test__/register.test.ts
          lineNumber: 138
          columnNumber: 11
      stack: |
        src/modules/user/__test__/register.test.ts:128:11
        Generator.next
        fulfilled (src/modules/user/__test__/register.test.ts:5:58)
      source: "        },\r
      
        \      });\r
      
        \r
      
        \      t.equal(response.statusCode, 400);\r
      
        \      t.same(response.json(), { error: \"Email already registered\" });\n"
      ...
    
    1..15
not ok 1 - registration # time=873.575ms
  ---
  at:
    fileName: src\modules\user\__test__\register.test.ts
    lineNumber: 23
    columnNumber: 16
    typeName: Object
    generated:
      fileName: src/modules/user/__test__/register.test.ts
      lineNumber: 33
      columnNumber: 16
  source: "\r
  
    \    const stub = ImportMock.mockFunction(userService, 'createUser', {\r
  
    \      firstName,\r
  
    ---------------^
  
    \      lastName,\r
  
    \      email,\n"
  ...

1..1
